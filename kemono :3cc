local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()

print("Starting")
Wait(3)


--pre doing stuff
local billboardData = {}
local isBillboardVisible = true
local currentColorIndex = 3
local colorList = {
    BrickColor.new("Dark nougat"),
    BrickColor.new("Tawny"),
    BrickColor.new("Tr. Red"),
    BrickColor.new("Tr. Flu. Reddish orange"),
    BrickColor.new("Pastel Blue"),
    BrickColor.new("Pastel violet"),
    BrickColor.new("Black"),
    BrickColor.new("Pastel brown"),
    BrickColor.new("Sand green"),
}
local meshColorMap = {}
local autoChangeEnabled = false

------------------------------------------------------------
-- Esp (it's ASS)
------------------------------------------------------------
local function PlayerEsp(character)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local billboardesp = Instance.new("BillboardGui")
    billboardesp.Name = "DistanceBillboard"
    billboardesp.Size = UDim2.new(0, 100, 0, 75)
    billboardesp.StudsOffset = Vector3.new(0, 3, 0)
    billboardesp.AlwaysOnTop = true
    billboardesp.Adornee = hrp
    billboardesp.Parent = character
    billboardesp.Enabled = true


    local function makeLabel(name, pos, color)
        local lbl = Instance.new("TextLabel")
        lbl.Name = name
        lbl.Size = UDim2.new(1, 0, 1/3, 0)
        lbl.Position = pos
        lbl.BackgroundTransparency = 1
        lbl.TextColor3 = color
        lbl.TextScaled = false
        lbl.Font = Enum.Font.Bodoni
        lbl.TextSize = 14
        lbl.Visible = true
        lbl.Parent = billboardesp
        return lbl
    end

    local hpLabel = makeLabel("HPLabel", UDim2.new(0, 0, 0, 0), Color3.fromRGB(52, 235, 155))
    local nameLabel = makeLabel("NameLabel", UDim2.new(0, 0, 1/4, 0), Color3.fromRGB(235, 168, 52))
    local distanceLabel = makeLabel("DistanceLabel", UDim2.new(0, 0, 2/4, 0), Color3.fromRGB(204, 52, 235))

    local conn
    conn = RunService.Heartbeat:Connect(function()
        local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local targetHRP = character and character:FindFirstChild("HumanoidRootPart")
        if not (myHRP and targetHRP and nameLabel and nameLabel.Parent) then
            if conn then conn:Disconnect() end
            if billboard then billboard:Destroy() end
            return
        end

        local distStuds = (myHRP.Position - targetHRP.Position).Magnitude
        local distMeters = distStuds / 3.571

        local visible = distStuds <= 2200
        hpLabel.Visible = visible
        nameLabel.Visible = visible
        distanceLabel.Visible = visible

        if visible then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                hpLabel.Text = "HP: " .. math.floor(humanoid.Health)
            end
            nameLabel.Text = "Name: " .. character.Name
            distanceLabel.Text = "Distance: " .. math.floor(distMeters) .. "m"

            local minSize, maxSize, growStart, maxDist = 14, 16, 400, 2200
            local t = math.clamp((distStuds - growStart) / (maxDist - growStart), 0, 1)
            local size = minSize + t * (maxSize - minSize)

            hpLabel.TextSize = size
            nameLabel.TextSize = size
            distanceLabel.TextSize = size
        end
    end)

    character.AncestryChanged:Connect(function(_, parent)
        if not parent then
            if conn then conn:Disconnect() end
            if billboard then billboard:Destroy() end
        end
    end)
end

for _, model in ipairs(workspace:GetChildren()) do
    if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model ~= LocalPlayer.Character then
        PlayerEsp(model)
    end
end

workspace.ChildAdded:Connect(function(child)
    if child:IsA("Model") and child:FindFirstChild("HumanoidRootPart") and child ~= LocalPlayer.Character then
        PlayerEsp(child)
    end
end)

------------------------------------------------------------
-- Gun changerr (f3) :3ccccc
------------------------------------------------------------


local function cleanSurfaceAppearance(surfaceAppearance)
    surfaceAppearance.ColorMap = ""
    surfaceAppearance.MetalnessMap = ""
    surfaceAppearance.NormalMap = ""
    surfaceAppearance.RoughnessMap = ""
    surfaceAppearance.AlphaMode = Enum.AlphaMode.Overlay
end

local function updateWeaponAppearance(tween)
    local weapon = workspace.CurrentCamera:FindFirstChild("CurrentWeapon")
    if not weapon then return end

    for _, mesh in ipairs(weapon:GetDescendants()) do
        if mesh:IsA("MeshPart") then
            local sa = mesh:FindFirstChildOfClass("SurfaceAppearance")
            if sa then cleanSurfaceAppearance(sa) end

            meshColorMap[mesh.Name] = currentColorIndex
            local color = colorList[currentColorIndex].Color
            mesh.Transparency = 0.56
            mesh.BrickColor = colorList[currentColorIndex]

            if tween then
                tweenService:Create(mesh, TweenInfo.new(0.6), {
                    Color = color,
                    Transparency = 0.56,
                }):Play()
            else
                mesh.Color = color
            end
        end
    end
end


local lastWeapon = nil
runService.Heartbeat:Connect(function()
    if not autoChangeEnabled then return end

    local weapon = workspace.CurrentCamera:FindFirstChild("CurrentWeapon")
    if weapon and weapon ~= lastWeapon then
        lastWeapon = weapon
        updateWeaponAppearance(false)
        print(lastWeapon)
    end
end)

------------------------------------------------------------
-- nofog
------------------------------------------------------------

local function NightTime()
    local atmosphere = game.Lighting:FindFirstChildOfClass("Atmosphere")
    
    if atmosphere then
        atmosphere:Destroy()
    end
end



------------------------------------------------------------
-- always day inc with nofog  :3ccccc
------------------------------------------------------------
local function AlwaysDay()
    sets.Weather.CurrentTimeOverride = 10
end

local function HAHAHAHA()
    player:kick("i hate niggers too ^W^")
end

--other cleanup shit

local function cleanupPlayer(targetPlayer)
    if billboardData[targetPlayer] then
        local data = billboardData[targetPlayer]
        if data.conn then data.conn:Disconnect() end
        if data.billboard and data.billboard.Parent then
            data.billboard:Destroy()
        end
        billboardData[targetPlayer] = nil
    end
end

local function onCharacterAdded(targetPlayer, character)
    cleanupPlayer(targetPlayer)
    PlayerEsp(character, targetPlayer)
end

local function onPlayerAdded(targetPlayer)
    if targetPlayer == player then return end
    if targetPlayer.Character then onCharacterAdded(targetPlayer, targetPlayer.Character) end
    targetPlayer.CharacterAdded:Connect(function(char) onCharacterAdded(targetPlayer, char) end)
    targetPlayer.AncestryChanged:Connect(function(_, parent)
        if not parent then cleanupPlayer(targetPlayer) end
    end)
end

for _, p in ipairs(game.Players:GetPlayers()) do onPlayerAdded(p) end
game.Players.PlayerAdded:Connect(onPlayerAdded)
game.Players.PlayerRemoving:Connect(cleanupPlayer)




local function applyColorToMesh(mesh, colorIndex, tween)
    local color = colorList[colorIndex]
    meshColorMap[mesh.Name] = colorIndex
    mesh.Transparency = 0.56

    if tween then
        tweenService:Create(mesh, TweenInfo.new(0.6), {
            Color = color.Color,
            BrickColor = color,
            Transparency = 0.56,
        }):Play()
    else
        mesh.BrickColor = color
    end
end

local function applyToWeapon(weapon, tween)
    for _, mesh in ipairs(weapon:GetDescendants()) do
        if mesh:IsA("MeshPart") then
            local sa = mesh:FindFirstChildOfClass("SurfaceAppearance")
            if sa then cleanSurfaceAppearance(sa) end
            local colorIndex = (meshColorMap[mesh.Name] or currentColorIndex)
            applyColorToMesh(mesh, colorIndex, tween)
        end
    end
end



local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "CoolHackUI"
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 250)
frame.Position = UDim2.new(0.02, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 8)

local function makeButton(name, text, yPos, color)
	local button = Instance.new("TextButton")
	button.Name = name
	button.Size = UDim2.new(1, -20, 0, 35)
	button.Position = UDim2.new(0, 10, 0, yPos)
	button.BackgroundColor3 = color or Color3.fromRGB(40, 40, 40)
	button.TextColor3 = Color3.new(1, 1, 1)
	button.Text = text
	button.Font = Enum.Font.GothamBold
	button.TextSize = 14
	button.Parent = frame

	local uiCorner = Instance.new("UICorner", button)
	uiCorner.CornerRadius = UDim.new(0, 6)

	return button
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end


	if input.UserInputType == Enum.UserInputType.Keyboard then
		if input.KeyCode == Enum.KeyCode.F1 then
			PlayerEsp()
		elseif input.KeyCode == Enum.KeyCode.F2 then
			NightTime()
            AlwaysDay()
		elseif input.KeyCode == Enum.KeyCode.F3 then
			updateWeaponAppearance()
        elseif input.KeyCode == Enum.KeyCode.F4 then
			HAHAHAHA()
        elseif input.KeyCode == Enum.KeyCode.F5 then
			HAHAHAHA()
	end
end)

------------------------------------------------------------

print("loaded")
