local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")


local billboardData = {}
local isBillboardVisible = true
local currentColorIndex = 3
local colorList = {
    BrickColor.new("Neon orange"),
    BrickColor.new("New Yeller"),
    BrickColor.new("Magenta"),
    BrickColor.new("Bright bluish green"),
    BrickColor.new("Lapis"),
    BrickColor.new("Maroon"),
    BrickColor.new("Black"),
}
local meshColorMap = {}
local autoChangeEnabled = false

------------------------------------------------------------
-- Esp (it's ASS)
------------------------------------------------------------
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer

local function createBillboard(character)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "DistanceBillboard"
    billboard.Size = UDim2.new(0, 100, 0, 75)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Adornee = hrp
    billboard.Parent = character

    local function makeLabel(name, pos, color)
        local lbl = Instance.new("TextLabel")
        lbl.Name = name
        lbl.Size = UDim2.new(1, 0, 1/3, 0)
        lbl.Position = pos
        lbl.BackgroundTransparency = 1
        lbl.TextColor3 = color
        lbl.TextScaled = false
        lbl.Font = Enum.Font.Bodoni
        lbl.TextSize = 14
        lbl.Visible = true
        lbl.Parent = billboard
        return lbl
    end

    local hpLabel = makeLabel("HPLabel", UDim2.new(0, 0, 0, 0), Color3.fromRGB(52, 235, 155))
    local nameLabel = makeLabel("NameLabel", UDim2.new(0, 0, 1/4, 0), Color3.fromRGB(235, 168, 52))
    local distanceLabel = makeLabel("DistanceLabel", UDim2.new(0, 0, 2/4, 0), Color3.fromRGB(204, 52, 235))

    local conn
    conn = RunService.Heartbeat:Connect(function()
        local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local targetHRP = character and character:FindFirstChild("HumanoidRootPart")
        if not (myHRP and targetHRP and nameLabel and nameLabel.Parent) then
            if conn then conn:Disconnect() end
            if billboard then billboard:Destroy() end
            return
        end

        local distStuds = (myHRP.Position - targetHRP.Position).Magnitude
        local distMeters = distStuds / 3.571

        local visible = distStuds <= 1200
        hpLabel.Visible = visible
        nameLabel.Visible = visible
        distanceLabel.Visible = visible

        if visible then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                hpLabel.Text = "HP: " .. math.floor(humanoid.Health)
            end
            nameLabel.Text = "Name: " .. character.Name
            distanceLabel.Text = "Distance: " .. math.floor(distMeters) .. "m"

            local minSize, maxSize, growStart, maxDist = 14, 16, 400, 1200
            local t = math.clamp((distStuds - growStart) / (maxDist - growStart), 0, 1)
            local size = minSize + t * (maxSize - minSize)

            hpLabel.TextSize = size
            nameLabel.TextSize = size
            distanceLabel.TextSize = size
        end
    end)

    character.AncestryChanged:Connect(function(_, parent)
        if not parent then
            if conn then conn:Disconnect() end
            if billboard then billboard:Destroy() end
        end
    end)
end

--model looping yeaa
for _, model in ipairs(workspace:GetChildren()) do
    if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model ~= LocalPlayer.Character then
        createBillboard(model)
    end
end

-- Auto-attach when new models are added:
workspace.ChildAdded:Connect(function(child)
    if child:IsA("Model") and child:FindFirstChild("HumanoidRootPart") and child ~= LocalPlayer.Character then
        createBillboard(child)
    end
end)


------------------------------------------------------------
-- Gun changerr (f3) :3ccccc
------------------------------------------------------------


local function cleanSurfaceAppearance(surfaceAppearance)
    surfaceAppearance.ColorMap = ""
    surfaceAppearance.MetalnessMap = ""
    surfaceAppearance.NormalMap = ""
    surfaceAppearance.RoughnessMap = ""
    surfaceAppearance.AlphaMode = Enum.AlphaMode.Overlay
end

local function updateWeaponAppearance(tween)
    local weapon = workspace.CurrentCamera:FindFirstChild("CurrentWeapon")
    if not weapon then return end

    for _, mesh in ipairs(weapon:GetDescendants()) do
        if mesh:IsA("MeshPart") then
            local sa = mesh:FindFirstChildOfClass("SurfaceAppearance")
            if sa then cleanSurfaceAppearance(sa) end

            meshColorMap[mesh.Name] = currentColorIndex
            local color = colorList[currentColorIndex].Color
            mesh.Transparency = 0.56
            mesh.BrickColor = colorList[currentColorIndex]

            if tween then
                tweenService:Create(mesh, TweenInfo.new(0.6), {
                    Color = color,
                    Transparency = 0.56,
                }):Play()
            else
                mesh.Color = color
            end
        end
    end
end


local lastWeapon = nil
runService.Heartbeat:Connect(function()
    if not autoChangeEnabled then return end

    local weapon = workspace.CurrentCamera:FindFirstChild("CurrentWeapon")
    if weapon and weapon ~= lastWeapon then
        lastWeapon = weapon
        updateWeaponAppearance(false)
        print(lastWeapon)
    end
end)


--mmmm so gooood lightning bro

local function NightTime()
    local atmosphere = game.Lighting:FindFirstChildOfClass("Atmosphere")
    
    if atmosphere then
        atmosphere:Destroy()
    end
end

--SCOPE CHANGER (F4)


local gunInventory = player:WaitForChild("GunInventory")
local attachmentList = {
    "ACOG",
    "RedDot",
    "SniperScope8x",
    "MicroReflex",
    "ACOGww2",
    "EOtech 512",
    "Holo"
}

local currentIndex = {}

local function changeAttachment(gunSlot)
    local attachmentMuzzle = gunSlot.Value:FindFirstChild("AttachmentMuzzle")
    if not attachmentMuzzle then
        print("AttachmentMuzzle not found in", gunSlot.Name)
        return
    end

    local attachmentName = attachmentList[currentIndex[gunSlot.Name]]
    print("Applying attachment:", attachmentName)

    local attachment = ReplicatedStorage.Assets.Attachments:FindFirstChild(attachmentName)
    if not attachment then
        print("Attachment not found in ReplicatedStorage:", attachmentName)
        return
    end

    attachmentMuzzle.Value = attachment
    print("Applied attachment:", attachmentName)
end

local function saveSlotAttachment(gunSlot)
    local slotName = gunSlot.Name
    if not currentIndex[slotName] then
        currentIndex[slotName] = 1
    end
    
    currentIndex[slotName] = (currentIndex[slotName] % #attachmentList) + 1
    print("Updated index for", slotName, "to", currentIndex[slotName])
end







local function onCharacterAdded(targetPlayer, character)
    cleanupPlayer(targetPlayer)
    createBillboard(character, targetPlayer)
end

local function onPlayerAdded(targetPlayer)
    if targetPlayer == player then return end
    if targetPlayer.Character then onCharacterAdded(targetPlayer, targetPlayer.Character) end
    targetPlayer.CharacterAdded:Connect(function(char) onCharacterAdded(targetPlayer, char) end)
    targetPlayer.AncestryChanged:Connect(function(_, parent)
        if not parent then cleanupPlayer(targetPlayer) end
    end)
end

for _, p in ipairs(game.Players:GetPlayers()) do onPlayerAdded(p) end
game.Players.PlayerAdded:Connect(onPlayerAdded)
game.Players.PlayerRemoving:Connect(cleanupPlayer)




local function applyColorToMesh(mesh, colorIndex, tween)
    local color = colorList[colorIndex]
    meshColorMap[mesh.Name] = colorIndex
    mesh.Transparency = 0.56

    if tween then
        tweenService:Create(mesh, TweenInfo.new(0.6), {
            Color = color.Color,
            BrickColor = color,
            Transparency = 0.56,
        }):Play()
    else
        mesh.BrickColor = color
    end
end

local function applyToWeapon(weapon, tween)
    for _, mesh in ipairs(weapon:GetDescendants()) do
        if mesh:IsA("MeshPart") then
            local sa = mesh:FindFirstChildOfClass("SurfaceAppearance")
            if sa then cleanSurfaceAppearance(sa) end
            local colorIndex = (meshColorMap[mesh.Name] or currentColorIndex)
            applyColorToMesh(mesh, colorIndex, tween)
        end
    end
end



game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.F1 then
        isBillboardVisible = not isBillboardVisible
        print("Pressed F1")

    elseif input.KeyCode == Enum.KeyCode.F2 then
        NightTime()

    elseif input.KeyCode == Enum.KeyCode.F3 then
        currentColorIndex = (currentColorIndex % #colorList) + 1
        autoChangeEnabled = true
        updateWeaponAppearance()

    elseif input.KeyCode == Enum.KeyCode.F4 then
        for _, gunSlot in pairs(gunInventory:GetChildren()) do
            if gunSlot:IsA("IntValue") then
                saveSlotAttachment(gunSlot)
                changeAttachment(gunSlot)
            end
        end
    end
end)



------------------------------------------------------------

print("guhhh")
print("F1 esp")
print("F2 night")
print("F3 change weapon")
print("Shuffle thru scopes grr")
